---

- hosts: "{{ hosts | default('ec2') }}"
  become: true

  vars:
    install_docker: true
    docker_compose_version: '1.29.0'

  tasks:

    - name: include vars.yml
      include_vars: 'vars.yml'

    - name: configure hostname
      hostname:
        name: "{{ instance_name }}"

    - name: install neovim apt-keys
      tags:
        - packages
      apt_key:
        keyserver: "{{ item.keyserver }}"
        id:  "{{ item.id }}"
      loop:
        - keyserver: keyserver.ubuntu.com
          id: 9DBB0BE9366964F134855E2255F96FCF8231B6DD
      when:
        ansible_os_family == 'Debian'

    - name: install docker apt-keys
      tags:
        - packages
        - docker
      apt_key:
        url: 'https://download.docker.com/linux/ubuntu/gpg'
        id: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'
        validate_certs: true
      when:
        ansible_os_family == 'Debian'
        and
        install_docker | bool == True

    - name: setup docker apt repo
      tags:
        - packages
        - docker
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when:
        ansible_os_family == 'Debian'
        and
        install_docker | bool == True

    - name: setup neovim apt repo
      tags:
        - packages
      apt_repository:
        repo: 'deb http://ppa.launchpad.net/neovim-ppa/stable/ubuntu {{ ansible_distribution_release }} main'
        state: present
      when:
        ansible_os_family == 'Debian'

    - name: Installing common packages
      tags:
        - packages
      package:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - ack
          - autofs
          - ctags
          - curl
          - git
          - make
          - sudo
          - tar
          - wget

    - name: Installing packages
      tags:
        - packages
      apt:
        update_cache: true
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - apt-transport-https
          - neovim
      when:
        ansible_os_family == 'Debian'

    - name: install docker
      tags:
        - docker
        - packages
      apt:
        update_cache: true
        state: present
        name: "{{ packages }}"
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      when:
        ansible_os_family == 'Debian'
        and
        install_docker | bool == True

    - name: update ubuntu user group to allow running docker
      tags:
        - docker
        - packages
      user:
        state: present
        name: ubuntu
        append: true
        groups:
          - docker

    - name: Enable docker service
      tags:
        - docker
        - packages
      service:
        name: docker
        state: started
        enabled: true
      when:
        install_docker | bool == True

    - name: Installing docker-compose
      tags:
        - docker
      get_url:
        url: 'https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}'
        dest: /usr/local/bin/docker-compose
        owner: root
        group: root
        mode: '0755'
      when:
        install_docker | bool == True

    - name: push local working directory to ec2
      become: false
      synchronize:
        src: '.'
        dest: '/home/ubuntu/'
        verify_host: false
        compress: true
        owner: false
        delete: true
        rsync_opts:
          - '--exclude=.git'
          - '--exclude=tmp'
          - '--exclude=.pytest_cache'
          - '--exclude=.tox'
          - '--exclude=*.lcts'

    - name: initialize nginx demo
      become: false
      make:
        chdir: '/home/ubuntu/devops-nginx'
        target: 'all'
